<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="ARPGL006737" tests="2" failures="0" timestamp="13 Feb 2023 03:08:57 GMT" time="0.002" errors="0">
  <testcase name="@BeforeTest beforeTestTestClassSecond" time="0.0" classname="TestClassSecond">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at TestClassSecond.beforeTestTestClassSecond(TestClassSecond.java:8)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTestTestClassSecond -->
  <testcase name="@BeforeClass beforeClassTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClassTestClassSecond -->
  <testcase name="@BeforeMethod beforeMethodTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethodTestClassSecond -->
  <testcase name="@BeforeMethod beforeMethodWithParamTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethodWithParamTestClassSecond -->
  <testcase name="@BeforeMethod staticBeforeMethodTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @BeforeMethod staticBeforeMethodTestClassSecond -->
  <testcase name="@AfterMethod afterMethodTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethodTestClassSecond -->
  <testcase name="@BeforeMethod beforeMethodTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethodTestClassSecond -->
  <testcase name="@BeforeMethod beforeMethodWithParamTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethodWithParamTestClassSecond -->
  <testcase name="@BeforeMethod staticBeforeMethodTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @BeforeMethod staticBeforeMethodTestClassSecond -->
  <testcase name="@AfterMethod afterMethodTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethodTestClassSecond -->
  <testcase name="@AfterClass afterClassTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @AfterClass afterClassTestClassSecond -->
  <testcase name="@AfterTest afterTestTestClassSecond" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- @AfterTest afterTestTestClassSecond -->
  <testcase name="testUnitClassOne" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- testUnitClassOne -->
  <testcase name="testUnitClassTwo" time="0.0" classname="TestClassSecond">
    <skipped/>
  </testcase> <!-- testUnitClassTwo -->
</testsuite>
